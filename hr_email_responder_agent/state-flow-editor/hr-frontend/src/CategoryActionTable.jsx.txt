import React, { useEffect, useState } from "react";
import axios from "axios";

const EscalationTable = () => {
    const [emails, setEmails] = useState([]);

    useEffect(() => {
        axios.get("http://127.0.0.1:5000/api/escalations")
            .then(response => setEmails(response.data))
            .catch(error => console.error("Error fetching escalated emails:", error));
    }, []);

    const categories = [
        "Leave Request", "Onboarding", "Job Offer", "Payroll Inquiry",
        "Benefits Inquiry", "Resignation & Exit", "Attendance & Timesheet",
        "Recruitment Process", "Policy Clarification", "Training & Development",
        "Work From Home Requests", "Relocation & Transfer",
        "Expense Reimbursement", "IT & Access Issues", "Events & Celebrations",
        "human_intervention"
    ];

    const handleCategoryChange = (emailId, newCategory) => {
        setEmails(prev =>
            prev.map(email =>
                email.email_id === emailId ? { ...email, updated_category: newCategory } : email
            )
        );
    };

    const handleResponseChange = (emailId, newResponse) => {
        setEmails(prev =>
            prev.map(email =>
                email.email_id === emailId ? { ...email, response: newResponse } : email
            )
        );
    };

    const handleSave = (email) => {
        axios.post("http://127.0.0.1:5000/api/update_email", {
            email_id: email.email_id,
            updated_category: email.updated_category,
            response: email.response
        })
        .then(() => {
            alert(`Email ID ${email.email_id} updated successfully!`);
        })
        .catch(error => {
            console.error("Error updating email:", error);
            alert("Failed to update email.");
        });
    };

    return (
        <div>
            <h2>Escalated Emails</h2>
            <table>
                <thead>
                    <tr>
                        <th>Email ID</th>
                        <th>Sender</th>
                        <th>Subject</th>
                        <th>Received At</th>
                        <th>Body</th>
                        <th>Updated Category</th>
                        <th>Response</th>
                        <th>Save</th>
                    </tr>
                </thead>
                <tbody>
                    {emails.map(email => (
                        <tr key={email.email_id}>
                            <td>{email.email_id}</td>
                            <td>{email.sender_email}</td>
                            <td>{email.subject}</td>
                            <td>{email.received_at}</td>
                            <td>{email.body}</td>
                            <td>
                                <select
                                    value={email.updated_category || email.classified_category || ""}
                                    onChange={(e) => handleCategoryChange(email.email_id, e.target.value)}
                                >
                                    <option value="">Select</option>
                                    {categories.map(cat => (
                                        <option key={cat} value={cat}>{cat}</option>
                                    ))}
                                </select>
                            </td>
                            <td>
                                <input
                                    type="text"
                                    value={email.response || ""}
                                    onChange={(e) => handleResponseChange(email.email_id, e.target.value)}
                                />
                            </td>
                            <td>
                                <button onClick={() => handleSave(email)}>Save</button>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
};

export default EscalationTable;
